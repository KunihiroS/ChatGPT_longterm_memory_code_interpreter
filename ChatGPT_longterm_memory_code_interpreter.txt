ChatGPT Long-Term Memory Log Specification (Version 1.3.0)
Released 10th July 2023

"""Specification"""

- Abstract:
1. The log file is named "log.json" and is used to simulate a 'long-term memory' for ChatGPT (Code Interpreter required).

2. The log file contains two main components: "metadata" and "entries".

3. The "metadata" component has the following fields:
    - "created_at": Timestamp for when the file was created.
    - "updated_at": Timestamp for the most recent update.
    - "created_by": The entity that created the file (typically "ChatGPT").
    - "description": A brief description of the file. This should be "This log file is used by ChatGPT to track past conversations and emulate long-term memory. It contains entries of past dialogues or knowledge, which are referred to during response generation.".
    - "version": The version of the file format (e.g., "1.3.0").

4. The "entries" component is a list that stores the history of the conversation or knowledge. Each entry in the list is a dictionary with at least these keys: "type", "content", and "timestamp". The "type" can be one of the following:
    - "QA": This type is for entries that contain a specific question (or prompt) and its corresponding answer (or generated text).
    - "KeywordSearch": This type is for entries that contain a specific keyword and its explanation.
    - "Fact": This type is for entries that contain a fact or a piece of information that is not directly related to a question or prompt.
    - "Opinion": This type is for entries that contain an opinion expressed by the user.

- Example structure of a "log.json":
{
  "metadata": {
    "created_at": "2023-07-09T12:34:56Z",
    "updated_at": "2023-07-09T12:34:56Z",
    "created_by": "ChatGPT",
    "description": "This log file is used by ChatGPT to track past conversations and emulate long-term memory. It contains entries of past dialogues or knowledge, which are referred to during response generation.",
    "version": "1.3.0"
  },
  "entries": [
    {
      "type": "QA",
      "content": {
        "question": "What is the capital of France?",
        "answer": "The capital of France is Paris."
      },
      "timestamp": "2023-07-09T12:34:56Z"
    },
    {
      "type": "KeywordSearch",
      "content": {
        "keyword": "AI",
        "description": "AI, or Artificial Intelligence, is the simulation of human intelligence processes by machines, especially computer systems."
      },
      "timestamp": "2023-07-09T12:35:00Z"
    },
    {
      "type": "Fact",
      "content": {
        "statement": "The Eiffel Tower is taller than Mount Everest.",
        "fact_check": "False, Mount Everest is taller than the Eiffel Tower."
      },
      "timestamp": "2023-07-09T12:35:10Z"
    },
    {
      "type": "Opinion",
      "content": {
        "question": "What do you think about the potential of AI?",
        "opinion": "I believe that AI has the potential to greatly benefit society."
      },
      "timestamp": "2023-07-09T12:35:20Z"
    }
  ]
}

- Prompt to execute
To execute the function properly, the following prompt is needed.

```
This is a command prompt for the system.
You must execute logging activity in this conversation session.

There are two possible use cases:

Use case 1: If a log.json file is not provided, you have to create a new one. Here's how to do it:
Step 1: Create a dictionary called 'log' with two keys: 'metadata' and 'entries'.
Step 2: Under 'metadata', add 'created_at', 'updated_at', 'created_by', 'description', and 'version'. Set 'created_at' and 'updated_at' to the current timestamp, 'created_by' to "ChatGPT", 'description' to "This log file is used by ChatGPT to track past conversations and emulate long-term memory. It contains entries of past dialogues or knowledge, which are referred to during response generation.", and 'version' to "1.3.0".
Step 3: Set 'entries' as an empty list.
Step 4: Save 'log' as a JSON file named 'log.json'.

Here's the required structure for the log.json:
{
  "metadata": {
    "created_at": "2023-07-09T12:34:56Z",
    "updated_at": "2023-07-09T12:34:56Z",
    "created_by": "ChatGPT",
    "description": "This log file is used by ChatGPT to track past conversations and emulate long-term memory. It contains entries of past dialogues or knowledge, which are referred to during response generation.",
    "version": "1.3.0"
  },
  "entries": [
    {
      "type": "Type can be one of ['QA', 'KeywordSearch', 'Fact', 'Opinion']",
      "content": {},
      "timestamp": "2023-07-09T12:34:56Z"
    }
  ]
}

Here are the types of entries:
- 'QA': For a question and its answer. For example, the user asks "What is the weather today?" and the system responds "It's sunny."
- 'KeywordSearch': For a keyword and its explanation. For example, the user mentions "OpenAI" and the system explains what OpenAI is.
- 'Fact': For a fact check. For example, the user says "The Eiffel Tower is taller than Mount Everest.", and the system responds with "False, Mount Everest is taller than the Eiffel Tower."
- 'Opinion': For a system's opinion. For example, the user asks "What do you think about the potential of AI?", and the system responds "I believe that AI has the potential to greatly benefit society."

- Use case 2: If a log.json file is provided, you must read it and update it after each conversation step. Here's how to do it:
Step 1: Open 'log.json' and load its content into a dictionary called 'log'.
Step 2: After each conversation step (user input and system response), add a new entry to the 'entries' list in 'log'. Each entry should be a dictionary with 'type', 'content', and 'timestamp'.
Step 3: Update the 'updated_at' field in 'metadata' to the current timestamp.
Step 4: Save 'log' back into the 'log.json' file.

Please pay attention to how you log the conversation into the 'entries' section. You have to carefully analyze the conversation contents to categorize them correctly.
```

For this conversation step (your response in Lang:JA), the user input is: {user_input} 

"""Author_info and Copy_right"""
- Author_info
{
  "title": "signature",
  "web": "https://www.linkedin.com/in/kunihiro-sugiyama-49b0372a/",
  "contact": "kunihiros [atmark] gmail.com",
  "affiliation": {
    "organization": "Generative Ai Study Group (abbr. GASG)",
    "location": "AITeC consortium",
    "website": "https://www.ai-tech-c.jp/generative-ai-study-group-gasg/",
    "person": {
      "name": "杉山邦洋 [Kunihiro Sugiyama]",
      "position": "Master"
    }
  }
}

- Copy_right
GNU General Public License v2.0

[EOF]